

.container{ /* ***only this one making the whole container 
    on the viewport center margin: 30px auto; we can put o or put some space by 30px will create some space between top of the window and container. this will make the container in the center of view port 
    /* this will turn into a grid container /*
    /* grid-template-rows: repeat(2, 300px); will keep the row height equal*/
    /*this is height of rows 150px 150px */
    /* in flex if we set the flex property 1 it will basically expand and occupy all the possible space*/
    /* in grid it has simmilar functionality called fractional unit*/
background: #eee;
width: 1000px;
margin: 30px auto;
}

.row{
background: rgb(216, 198, 111);
display: grid;
grid-template-rows: repeat(4, 150px) 1fr;
grid-template-columns: repeat(3, 1fr) 300px;
/* grid-template-rows: repeat(2, 300px);
grid-template-columns: 1fr; */
grid-template-areas: "header header header header"
                     "sidebar menu menu sidebar"
                     "main main main main"
                     "footer footer footer footer";
grid-gap: 20px;
}

.item{
padding: 20px;
font-size: 20px;
font-family: Verdana, Geneva, Tahoma, sans-serif;
}

.header{
    background: orangered;
    grid-area: header;

}

.sidebar{
    background: olive;
    grid-area: sidebar;

}

.main{
background: orange;
grid-area: main;
}

.footer{
    background: rebeccapurple;
    grid-area: footer;
}

@media (min-width: 700px){
    .row{
        grid-template-columns: repeat(3, 1fr);
    }
}